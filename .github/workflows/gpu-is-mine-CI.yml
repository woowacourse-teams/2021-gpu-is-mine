name: CI

on:
  pull_request:
    branches: [develop]

  workflow_dispatch:

jobs:
  changes:
    runs-on: ubuntu-18.04
    outputs:
      back-end: ${{ steps.filter.outputs.back-end }}
      front-end: ${{ steps.filter.outputs.front-end }}
    steps:
      - name: check if front-end directory has changed
        uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            back-end:
              - 'back-end/**'
            front-end:
              - 'front-end/**'

  FE-build:
    needs: changes
    if: ${{ needs.changes.outputs.front-end == 'true' }}
    runs-on: ubuntu-18.04
    env:
      working-directory: ./front-end
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install dependencies
        run: yarn install
        working-directory: ${{ env.working-directory }}

      - name: Build with webpack
        run: yarn build
        working-directory: ${{ env.working-directory }}

  FE-test:
    needs: FE-build
    if: ${{ needs.changes.outputs.front-end == 'true' }}
    runs-on: ubuntu-18.04
    env:
      working-directory: ./front-end
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install dependencies
        run: yarn install
        working-directory: ${{ env.working-directory }}

      - name: test with jest
        run: yarn test
        working-directory: ${{ env.working-directory }}

  FE-storybook-build:
    needs: FE-test
    if: ${{ needs.changes.outputs.front-end == 'true' }}
    runs-on: ubuntu-18.04
    env:
      working-directory: ./front-end
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install dependencies
        run: yarn install
        working-directory: ${{ env.working-directory }}

      - name: Publish to Chromatic
        uses: chromaui/action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
          workingDir: ${{ env.working-directory }}
        id: chromatic

      - name: Get Deployed StorybookUrl
        run: echo ${{ steps.chromatic.outputs.storybookUrl }} |  sed 's/\/iframe.html$//'

  BE-build:
    needs: changes
    if: ${{ needs.changes.outputs.back-end == 'true' }}
    runs-on: ubuntu-18.04
    env:
      working-directory: ./back-end
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
          token: ${{ secrets.ACCESS_TOKEN }}
      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: "8"
          distribution: "adopt"
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        working-directory: ${{ env.working-directory }}
      - name: Build with Gradle
        run: ./gradlew build -x checkstyleMain -x checkstyleTest -x test
        working-directory: ${{ env.working-directory }}

  BE-checkstyle:
    needs: BE-build
    runs-on: ubuntu-18.04
    env:
      working-directory: ./back-end
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
          token: ${{ secrets.ACCESS_TOKEN }}
      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: "8"
          distribution: "adopt"
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        working-directory: ${{ env.working-directory }}
      - name: Checkstyle with Gradle
        run: ./gradlew checkstyleMain checkstyleTest -q
        working-directory: ${{ env.working-directory }}

  BE-test:
    needs: BE-checkstyle
    runs-on: ubuntu-18.04
    env:
      working-directory: ./back-end
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
          token: ${{ secrets.ACCESS_TOKEN }}
      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: "8"
          distribution: "adopt"
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        working-directory: ${{ env.working-directory }}
      - name: Test with Gradle
        run: ./gradlew test
        working-directory: ${{ env.working-directory }}
